import React, { Component } from 'react';
import { connect } from 'react-redux';
import moment from 'moment';
import { Alert, Badge, Button, Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';

import { alertActions } from '../../_actions';
import { tokenActions } from '../../_actions/tokens.actions';

function Item({ item }) {
  const getBadge = isUsed => {
    return !!isUsed ? 'danger' : 'success';
  };

  return (
    <tr key={item._id.toString()}>
      <td>{item.token}</td>
      <td>{item.assignedTo || `---`}</td>
      <td>
        <Badge color={getBadge(item.isUsed)}>{item.isUsed ? 'Used' : 'Available'}</Badge>
      </td>
      <td>{item.usedBy || `---`}</td>
      <td>{item.usedAt ? moment(item.usedAt).format('DD/MM/YY') : '---'}</td>
      <td>{item.generatedBy}</td>
    </tr>
  );
}

class Tokens extends Component {
  constructor(props) {
    super(props);
    this.props.dispatch(alertActions.clear());
  }

  componentDidMount() {
    this.props.dispatch(tokenActions.getAll());
  }

  generate = () => {
    this.props.dispatch(tokenActions.generate());
  };

  render() {
    const { items, alertColor, alertMessage } = this.props;

    return (
      <div className="animated fadeIn">
        <Row>
          <Col>
            <Card>
              <CardHeader>
                <i className="fa fa-align-justify" />
                Tokens
                <div className="card-header-actions">
                  <Button onClick={this.generate} block color="primary">
                    <i className="fa fa-plus-square-o" />
                    {` Generate 10 tokens`}
                  </Button>
                </div>
              </CardHeader>
              <CardBody>
                {alertMessage && <Alert color={alertColor}>{alertMessage}</Alert>}

                <Table responsive hover>
                  <thead>
                    <tr>
                      <th scope="col">Code</th>
                      <th scope="col">Assigned To</th>
                      <th scope="col">Used</th>
                      <th scope="col">Used By</th>
                      <th scope="col">Used At</th>
                      <th scope="col">Generated By</th>
                    </tr>
                  </thead>
                  <tbody>
                    {items && items.map(token => <Item key={token.token} item={token} />)}
                  </tbody>
                </Table>
                {(!items || (items && items.length === 0)) && (
                  <Alert color="warning">Empty tokens!</Alert>
                )}
              </CardBody>
            </Card>
          </Col>
        </Row>
      </div>
    );
  }
}

const mapStateToProps = state => {
  const { items } = state.tokens;
  const { color, message } = state.alert;
  return {
    items,
    alertColor: color,
    alertMessage: message
  };
};

export default connect(mapStateToProps)(Tokens);
